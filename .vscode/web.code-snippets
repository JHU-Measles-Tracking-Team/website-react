{
	"NextJS Page Functional Component": {
		"scope": "typescriptreact",
		"prefix": "fgs_next_page_fc",
		"body": [
			"import React, { FC } from \"react\";",
			"import { GetStaticProps } from \"next\";",
			"import { graphqlQuery } from \"util/api\";",
			"import { graphqlQueryType } from \"types/api/graphql-query\";",
			"import { IMeta } from \"types/cms/meta\"; ",
			"import styles from \"./${1:PAGE_NAME}.module.scss\";",
			"import Page from \"components/layout/Page/Page\";",
			"",
			"export type ${1:PAGE_NAME}Props = {",
			"\t${2:COLLECTION_NAME}: any;",
			"}",
			"",
			"const ${1:PAGE_NAME}:FC<${1:PAGE_NAME}Props> = ({ ${2:COLLECTION_NAME} }) => {",
			"\tlet meta: IMeta = {}; // TODO: replace me in assembly",
			"",
			"\treturn (",
			"\t\t<Page meta={meta}>",
			"\t\t\t",
			"\t\t</Page>",
			"\t);",
			"};",
			"",
			"export default ${1:PAGE_NAME};",
			"",
			"export const getStaticProps: GetStaticProps = async () => {",
			"\tconst ${2:COLLECTION_NAME}s = await graphqlQuery<${4:QUERY_TYPE}>({",
			"\t\tclientType: graphqlQueryType.server,",
			"\t\tquery: ${3:QUERY_NAME},",
			"\t});",
			"",
			"\treturn {",
			"\t\tprops: {",
			"\t\t\t${2:COLLECTION_NAME},",
			"\t\t},",
			"\t\trevalidate: 60,",
			"\t};",
			"}",
		]
	},
	"NextJS Page Wildcard Route Functional Component": {
		"scope": "typescriptreact",
		"prefix": "fgs_next_page_wildcard_fc",
		"body": [
			"import React, { FC } from \"react\";",
			"import { GetStaticProps, GetStaticPaths } from \"next\";",
			"import { ParsedUrlQuery } from \"querystring\";",
			"import { graphqlQuery } from \"util/api\";",
			"import { graphqlQueryType } from \"types/api/graphql-query\";",
			"import { IMeta } from \"types/cms/meta\"; ",
			"import styles from \"./${1:PAGE_NAME}.module.scss\";",
			"import Page from \"components/layout/Page/Page\";",
			"import { useRouter } from \"next/router\";",
			"",
			"interface IParams extends ParsedUrlQuery {",
			"\tslug: string;",
			"}",
			"",
			"export type ${1:PAGE_NAME}Props = {",
			"\t${2:COLLECTION_NAME}: any;",
			"}",
			"",
			"const ${1:PAGE_NAME}: FC<${1:PAGE_NAME}Props> = ({ ${2:COLLECTION_NAME} }) => {",
			"\tconst router = useRouter();",
			"",
			"\tif (router.isFallback) {",
			"\t\treturn <p>Loading...</p>;",
			"\t}",
			"",
			"\tlet meta: IMeta = {}; // replace me",
			"",
			"\treturn (",
			"\t\t<Page meta={meta}>",
			"\t\t\t",
			"\t\t</Page>",
			"\t);",
			"};",
			"",
			"export default ${1:PAGE_NAME};",
			"",
			"export const getStaticProps: GetStaticProps = async ({params}) => {",
			"\tconst ${2:COLLECTION_NAME}s = await graphqlQuery<${4:QUERY_TYPE}>({",
			"\t\tclientType: graphqlQueryType.server,",
			"\t\tquery: ${3:QUERY_NAME},",
			"\t\tvariables: {",
			"\t\t\tslug: (params as IParams).slug,",
			"\t\t}",
			"\t});",
			"",
			"\treturn ${2:COLLECTION_NAME}s.length",
			"\t\t? {",
			"\t\t\t\tprops: {",
			"\t\t\t\t\t${2:COLLECTION_NAME}: ${2:COLLECTION_NAME}s[0],",
			"\t\t\t\t},",
			"\t\t\t\trevalidate: 60,",
			"\t\t\t}",
			"\t\t: { notFound: true };",
			"}",
			"",
			"export const getStaticPaths: GetStaticPaths = async () => {",
			"\treturn {",
			"\t\tpaths: [],",
			"\t\tfallback: true,",
			"\t};",
			"};"
		]
	},
	"NextJS Functional Component": {
		"scope": "typescriptreact",
		"prefix": "fgs_next_fc",
		"body": [
			"import React, { FC } from \"react\";",
			"import cx from \"classnames\";",
			"import styles from \"./${1:COMPONENT_NAME}.module.scss\";",
			"",
			"export type ${1:COMPONENT_NAME}Props = {",
			"\tclassName?: string;",
			"};",
			"",
			"const ${1:COMPONENT_NAME}: FC<${1:COMPONENT_NAME}Props> = ({ className }) => {",
			"\treturn (",
			"\t\t<div className={cx(styles.base, className)}>",
			"\t\t\t",
			"\t\t</div>",
			"\t);",
			"};",
			"",
			"export default ${1:COMPONENT_NAME};",
			"",
		]
	},
	"Storybook Component": {
		"scope": "typescriptreact",
		"prefix": "fgs_story",
		"body": [
			"import React from \"react\";",
			"import ${1:COMPONENT_NAME}, { ${1:COMPONENT_NAME}Props } from \"./${1:COMPONENT_NAME}\";",
			"import { Meta, Story } from \"@storybook/react\";",
			"",
			"export default {",
			"\ttitle: \"${2:FOLDER}/${1:COMPONENT_NAME}\",",
			"\tcomponent: ${1:COMPONENT_NAME},",
			"} as Meta;",
			"",
			"const Template: Story<${1:COMPONENT_NAME}Props> = (args) => <${1:COMPONENT_NAME} {...args} />;",
			"",
			"export const Default = Template.bind({});",
			"Default.args = {};",
		]
	}
}
